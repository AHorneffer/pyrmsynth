{"name":"pyrmsynth","google":"","body":"`pyrmsynth` - Python based RM Synthesis code including RMCLEAN\r\n==============================================================\r\n\r\n*Current version:* 1.2.0\r\n*Updated on:* 2012-12-03\r\n\r\n`pyrmsynth` performs RM synthesis, either simply by Fourier transformation \r\n(to produce a dirty image) or using the RMCLEAN method as described by \r\nHeald, et al. (2009).  It uses FFTs for the Fourier inversion and, as far as I \r\nknow, this is the only RM synthesis software around that does this. The Numpy \r\nFFTs are themselves quite fast, but in order to use them, the data first need to \r\nbe placed on a regularly spaced lambda^2 grid. For this, the data are \"gridded\" \r\nby convolution with a Kaiser-Bessel Window function and sampling at regular \r\nintervals, as described in e.g. Beatty, Nishimura, and Pauly \r\n(IEEE Transactions in Med. Imaging, Vol 24, No. 6, 2005).\r\n\r\nThe gridding procedure, which requires a convolution, is quite slow when \r\nimplemented in pure Python, so I have re-implemented the gridding routines using\r\nCython, which converts python-eque code into C code that can be compiled and \r\nimported into Python.\r\n\r\nThe result is a package that performs fast RM Synthesis and RM CLEAN imaging\r\nwhile still providing the flexibility of a Python interface.\r\n\r\npyrmsynth contains an application `rmsynthesis.py` for processing the lines of \r\nsight in a \"stack\" of sky images, i.e. many polarized sky images at different \r\nfrequencies. This application was written with [LOFAR](http://www.lofar.org) \r\nprocessing in mind, but should be generally useful as long as your images are\r\nprovided as a set of FITS files generaged by CASA (or something compatible).\r\n\r\npyrmsynth also can be used as a more generic library for writing your own \r\nRM synthesis applications. The `rm_tools` sub-package contains efficient classes\r\nfor RM synthesis and RM CLEAN. You can easily write your own scripts to do file\r\nI/O and use this package to do the actual RM synthesis computations in an\r\nefficient manner.\r\n\r\nFor more information, please refer to the [pyrmsynth Wiki](https://github.com/mrbell/gfft/wiki).\r\n\r\n`pyrmsynth` is licensed under the [GPLv3](http://www.gnu.org/licenses/gpl.html).\r\n","note":"Don't delete this file! It's used internally to help with page regeneration.","tagline":"A fast python-based RM synthesis and RM CLEAN package"}